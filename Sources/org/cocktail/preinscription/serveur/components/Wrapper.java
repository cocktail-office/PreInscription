/*
 * Copyright COCKTAIL (www.cocktail.org), 1995, 2012 This software
 * is governed by the CeCILL license under French law and abiding by the
 * rules of distribution of free software. You can use, modify and/or
 * redistribute the software under the terms of the CeCILL license as
 * circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * As a counterpart to the access to the source code and rights to copy, modify
 * and redistribute granted by the license, users are provided only with a
 * limited warranty and the software's author, the holder of the economic
 * rights, and the successive licensors have only limited liability. In this
 * respect, the user's attention is drawn to the risks associated with loading,
 * using, modifying and/or developing or reproducing the software by the user
 * in light of its specific status of free software, that may mean that it
 * is complicated to manipulate, and that also therefore means that it is
 * reserved for developers and experienced professionals having in-depth
 * computer knowledge. Users are therefore encouraged to load and test the
 * software's suitability as regards their requirements in conditions enabling
 * the security of their systems and/or data to be ensured and, more generally,
 * to use and operate it in the same conditions as regards security. The
 * fact that you are presently reading this means that you have had knowledge
 * of the CeCILL license and that you accept its terms.
 */
package org.cocktail.preinscription.serveur.components;

import org.cocktail.fwkcktlajaxwebext.serveur.CktlAjaxWOComponent;
import org.cocktail.fwkcktlwebapp.common.util.StringCtrl;
import org.cocktail.preinscription.serveur.Application;
import org.cocktail.preinscription.serveur.Session;
import org.cocktail.preinscription.serveur.VersionMe;

import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WOResponse;

import er.ajax.CktlERXResponseRewriter;

// Generated by the WOLips Templateengine Plug-in at 9 mars 2008 20:47:05
public class Wrapper extends CktlAjaxWOComponent {
	private String onloadJS;
	private String erreurScript;
	private String titre;

	public Wrapper(WOContext context) {
		super(context);
	}

	@Override
	public void appendToResponse(WOResponse response, WOContext context) {
		super.appendToResponse(response, context);
		CktlERXResponseRewriter.addScriptResourceInHead(response, context, "ScolarixModulesFwk.framework", "scripts/strings.js");
		CktlERXResponseRewriter.addScriptResourceInHead(response, context, "ScolarixModulesFwk.framework", "scripts/formatteurs.js");
		CktlERXResponseRewriter.addScriptResourceInHead(response, context, "ScolarixModulesFwk.framework", "scripts/pwc-os.js");
		CktlERXResponseRewriter.addScriptResourceInHead(response, context, "ScolarixModulesFwk.framework", "scripts/scolarixmodules.js");

		CktlERXResponseRewriter.addStylesheetResourceInHead(response, context, "FwkCktlThemes", "css/CktlCommon.css");
		CktlERXResponseRewriter.addStylesheetResourceInHead(response, context, "FwkCktlThemes", "css/CktlCommonBleu.css");
		CktlERXResponseRewriter.addStylesheetResourceInHead(response, context, null, "styles/preinscription.css");
		CktlERXResponseRewriter.addStylesheetResourceInHead(response, context, null, "styles/modules.css");
	}

	public Erreur pageErreur() {
		Erreur nextPage = (Erreur) pageWithName(Erreur.class.getName());
		return nextPage;
	}

	public Telechargements pageTelechargements() {
		return (Telechargements) pageWithName(Telechargements.class.getName());
	}

	public ApresEnregistrement pageApresEnregistrer() {
		ApresEnregistrement nextPage = (ApresEnregistrement) pageWithName(ApresEnregistrement.class.getName());
		return nextPage;
	}

	/**
	 * @return the onloadJS
	 */
	public String onloadJS() {
		if (((Session) session()).isApresEnregistrer()) {
			onloadJS = "openWinPageApresEnregistrer();";
		}
		else {
			onloadJS = (String) valueForBinding("onloadJS");
		}
		return onloadJS;
	}

	/**
	 * @param onloadJS
	 *            the onloadJS to set
	 */
	public void setOnloadJS(String onloadJS) {
		this.onloadJS = onloadJS;
	}

	/**
	 * @return the erreurScript
	 */
	public String erreurScript() {
		String messageErreur = (String) session().objectForKey("MessageErreur");
		if (!StringCtrl.isEmpty(messageErreur)) {
			erreurScript = "alert('" + messageErreur + "');";
		}
		else {
			erreurScript = null;
		}

		return erreurScript;
	}

	/**
	 * @param erreurScript
	 *            the erreurScript to set
	 */
	public void setErreurScript(String erreurScript) {
		this.erreurScript = erreurScript;
	}

	/**
	 * @return the titre
	 */
	public String titre() {
		if (titre == null) {
			if (hasSession() && ((Session) session()).garnucheApplication() != null) {
				titre = ((Session) session()).garnucheApplication().applNom().toUpperCase();
			}
			else {
				titre = (String) valueForBinding("titre");
			}
			if (titre == null) {
				titre = "INSCRIPTION";
			}
		}
		return titre;
	}

	/**
	 * @param titre
	 *            the titre to set
	 */
	public void setTitre(String titre) {
		this.titre = titre;
	}

	public String copyright() {
		return cktlApp().copyright();
	}

	public String contact() {
		return "mailto:" + ((Application) application()).config().stringForKey("ADMIN_MAIL") + "?subject=[PRE-INSCRIPTION]:Demande de renseignements";
	}

	public String version() {
		return VersionMe.htmlAppliVersion();
	}

}