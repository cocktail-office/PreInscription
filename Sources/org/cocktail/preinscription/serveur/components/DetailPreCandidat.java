/*
 * Copyright COCKTAIL (www.cocktail.org), 1995, 2012 This software
 * is governed by the CeCILL license under French law and abiding by the
 * rules of distribution of free software. You can use, modify and/or
 * redistribute the software under the terms of the CeCILL license as
 * circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 * As a counterpart to the access to the source code and rights to copy, modify
 * and redistribute granted by the license, users are provided only with a
 * limited warranty and the software's author, the holder of the economic
 * rights, and the successive licensors have only limited liability. In this
 * respect, the user's attention is drawn to the risks associated with loading,
 * using, modifying and/or developing or reproducing the software by the user
 * in light of its specific status of free software, that may mean that it
 * is complicated to manipulate, and that also therefore means that it is
 * reserved for developers and experienced professionals having in-depth
 * computer knowledge. Users are therefore encouraged to load and test the
 * software's suitability as regards their requirements in conditions enabling
 * the security of their systems and/or data to be ensured and, more generally,
 * to use and operate it in the same conditions as regards security. The
 * fact that you are presently reading this means that you have had knowledge
 * of the CeCILL license and that you accept its terms.
 */
package org.cocktail.preinscription.serveur.components;

import org.cocktail.fwkcktlwebapp.common.util.DateCtrl;
import org.cocktail.preinscription.serveur.controleurs.CtrlDetailPreCandidat;
import org.cocktail.scolarix.serveur.finder.FinderPreEtudiant;
import org.cocktail.scolarix.serveur.metier.eos.EOPreEtudiant;
import org.cocktail.scolarix.serveur.metier.eos.EORdvCandidat;

import com.webobjects.appserver.WOActionResults;
import com.webobjects.appserver.WOContext;
import com.webobjects.foundation.NSMutableDictionary;
import com.webobjects.foundation.NSTimestamp;
import com.webobjects.foundation._NSStringUtilities;

// Generated by the WOLips Templateengine Plug-in at 5 juil. 2008 17:47:43
public class DetailPreCandidat extends MyComponent {
	public CtrlDetailPreCandidat ctrl = null;
	
	private NSMutableDictionary qbe = null;
		
	public DetailPreCandidat(WOContext context) {
        super(context);
        ctrl = new CtrlDetailPreCandidat(this);
        qbe = new NSMutableDictionary();
    }


	public boolean isAfficherDetailPreCandidat() {
		return ctrl.lePreCandidat()==null?false:true;
	}

	public String cadreTabName() {
		String cadreTabName = null;
		if (ctrl.getUnCadre() != null) {
			cadreTabName = ctrl.getUnCadre().garnucheCadre().cadrCode();
			cadreTabName = _NSStringUtilities.stringMarkingUpcaseTransitionsWithDelimiter(cadreTabName, " ");
		}
		return cadreTabName;
	}

    public NSMutableDictionary qbe() {
		return qbe;
	}

	public void setQbe(NSMutableDictionary qbe) {
		this.qbe = qbe;
	}


	public WOActionResults afficherCadre() {
		return null;
	}

	public String divCadreName() {
		String divCadreName = "SansNom";
		if (ctrl.getUnCadreSelectionne() != null) {
			divCadreName = ctrl.getUnCadreSelectionne().garnucheCadre().componentName();
		}
		return divCadreName;
	}

	public WOActionResults submit() {
		return null;
	}

	public boolean isPreCandidatPossedeUnRdv() {
		boolean isPreCandidatPossedeUnRdv = false;
		EOPreEtudiant preEtudiant = FinderPreEtudiant.getPreEtudiantIne(session().defaultEditingContext(), ctrl.unPreCandidat().candBea(), ctrl.unPreCandidat().candDateNais());
		if (preEtudiant != null && preEtudiant.rendezVous() != null) {
			isPreCandidatPossedeUnRdv = true;
		}
		return isPreCandidatPossedeUnRdv;
	}

	public String rdvPreCandidat() {
		String rdvPreCandidat = null;
		EOPreEtudiant preEtudiant = FinderPreEtudiant.getPreEtudiantIne(session().defaultEditingContext(), ctrl.unPreCandidat().candBea(), ctrl.unPreCandidat().candDateNais());
		if (preEtudiant != null) {
			EORdvCandidat rdv = preEtudiant.rendezVous();
			if (rdv != null) {
				NSTimestamp dateRdv = rdv.convocDate();
				String dateStr = DateCtrl.dateToString(dateRdv, "%d %B %Y");
				String heureRdv = rdv.convocHeureEnClair();
				rdvPreCandidat = dateStr+" "+heureRdv;
			}
		}
		
		return rdvPreCandidat;
	}

}